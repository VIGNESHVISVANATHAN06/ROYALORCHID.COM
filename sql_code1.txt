
CREATE DATABASE ROYAL_ORCHID

USE ROYAL_ORCHID



CREATE TABLE PRODUCT
(

PRODUCT_ID		INT PRIMARY KEY ,

PRODUCT_NAME		VARCHAR(50),

QUANTITY		INT,

PRICE			MONEY


);

INSERT INTO PRODUCT VALUES(100,'VEG BIRYANI',1,200);
INSERT INTO PRODUCT VALUES(101,'PANNER BIRYANI',1,250);

INSERT INTO PRODUCT VALUES(102,'MUSHROOM BIRYANI',1,280);

INSERT INTO PRODUCT VALUES(103,'ALU BIRYANI',1,150);
INSERT INTO PRODUCT VALUES(104,'MALABAR FISH BIRYANI',1,380);
INSERT INTO PRODUCT VALUES(105,'GOAN PRAWN CURRY WITH RAW MANGO',1,480);
INSERT INTO PRODUCT VALUES(106,'MURGH MUSALLAM',1,420);
INSERT INTO PRODUCT VALUES(107,'BONDA',1,80);
INSERT INTO PRODUCT VALUES(108,'IDLY',1,60);
INSERT INTO PRODUCT VALUES(109,'DOSA',1,100);
INSERT INTO PRODUCT VALUES(110,'PAROTTA',1,60);
INSERT INTO PRODUCT VALUES(111,'CHICKEN MANCHURIYAN',1,360);

INSERT INTO PRODUCT VALUES(112,'VEG HAKKA NOODLES',1,260);

INSERT INTO PRODUCT VALUES(113,'FIRED RICE',1,180);

INSERT INTO PRODUCT VALUES(114,'MUSHROOM AND TAMATO RICE',1,360);

INSERT INTO PRODUCT VALUES(115,'ONE POT VEGETABLE BIRYANI',1,450);
INSERT INTO PRODUCT VALUES(116,'GOBI PARATHA AND CALULIFLOWER',1,250);
INSERT INTO PRODUCT VALUES(117,'STUFFED FLATBREAD',1,250);
INSERT INTO PRODUCT VALUES(118,'CARROT SALAD WITH GRAP DEESSING',1,450);





 
 SELECT * FROM PRODUCT

CREATE TABLE CATEGORIES
(

CATEGORIES_ID 		INT PRIMARY KEY,

CATEGORIES_NAME 	VARCHAR(50),


PRODUCT_ID		INT

CONSTRAINT FK_PRODUCT_ID FOREIGN KEY (PRODUCT_ID)

REFERENCES PRODUCT(PRODUCT_ID));

 

INSERT INTO CATEGORIES(CATEGORIES_ID,CATEGORIES_NAME) VALUES(1,'TIFFIN'),(2,'LUNCH'),(3,'DINNER')

SELECT * FROM CATEGORIES

ALTER TABLE CATEGORIES DROP  COLUMN  CATEGORIES_NAME2

ALTER TABLE CATEGORIES DROP  COLUMN  CATEGORIES_NAME3

DELETE FROM CATEGORIES



CREATE TABLE TIFFIN
(

TIFFIN_ID 			INT,

TIFFIN_DISH		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT

CONSTRAINT CK_TIFFIN FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));


CREATE TABLE LUNCH
(

LUNCH_ID 			VARCHAR(30),

LUNCH_DISH		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT

CONSTRAINT CK_LUNCH FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));


CREATE TABLE DINNER
(

DINNER_ID 			VARCHAR(30),

DINNER_DISH		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT

CONSTRAINT CK_DINNER FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));



CREATE TABLE VEG
(

VEG_ID 			INT,

VEG_DISH		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT

CONSTRAINT CK_VEG FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));





CREATE TABLE NON_VEG(

NONVEG_ID 		INT,

DISH_NAME		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT


CONSTRAINT CK_NONVEG FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));
 









CREATE TABLE CHINESE(

CHI_ID 		INT,

CHI_DISH_NAME		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT

CONSTRAINT CK_CHINESE FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));



CREATE TABLE BEVERAGES(

BEVERAGES_ID 		INT,

BEVERAGES_NAME		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT


CONSTRAINT CK_BEVERAGES FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));



CREATE TABLE SNACKS(

SNACKS_ID 		INT,

SNACKS_NAME		VARCHAR(50),

DETAILS			VARCHAR(255),

PRICE			MONEY,

CATEGORIES_ID		INT


CONSTRAINT CK_SNACKS FOREIGN KEY(CATEGORIES_ID)

REFERENCES CATEGORIES(CATEGORIES_ID));
 
 




CREATE TABLE CUSTOMER(
CUSTOMER_ID INT PRIMARY KEY ,
FIRST_NAME   VARCHAR(30),
LAST_NAME    VARCHAR(30),
ADDRESS      VARCHAR(50),
PHONE_NUMBER  INT,
PINCODE INT,
STATE VARCHAR(30),
COUNTRY VARCHAR(30)
);






CREATE TABLE ORDERS(

ORDER_ID		INT,

PRODUCT_ID		INT,

ORDER_DATE		DATETIME,

CUSTOMER_ID		INT,

CONSTRAINT CK_ORDER FOREIGN KEY(PRODUCT_ID)

REFERENCES PRODUCT(PRODUCT_ID),


CONSTRAINT CK_ORDER1 FOREIGN KEY(CUSTOMER_ID)

REFERENCES CUSTOMER(CUSTOMER_ID)

);